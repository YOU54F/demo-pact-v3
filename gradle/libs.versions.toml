[versions]
byteBuddy = "1.14.9"
caffeine = "3.1.8"
commonsLang = "3.13.0"
ektorp = "1.5.0"
groovy = "4.0.15"
jackson = "2.15.3"
janino = "3.1.10"
jodaTime = "2.12.5"
jsonpath = "2.8.0"
jsoup = "1.16.2"
junitJupiter = "5.10.1"
jupiter = "5.8.2"
kotest = "5.7.2"
kotlin = "1.9.10"
kotlinx = "1.7.0"
logback = "1.4.11"
logstashLogbackEncoder = "7.4"
mockito = "5.7.0"
objenesis = "3.3"
pact = "4.6.3"
slf4j = "2.0.9"
spock = "2.4-M1-groovy-4.0"
spring = "6.0.13"
springBoot = "3.1.5"
springRetry = "2.0.4"
springSecurity = "6.1.5"
testcontainers = "1.19.1"
togglz = "4.4.0"
tomcat = "10.1.15"

[libraries]
assertj = { module = "org.assertj:assertj-core", version = "3.24.2" }
byteBuddy = { module = "net.bytebuddy:byte-buddy", version.ref = "byteBuddy" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
commonsCodec = { module = "commons-codec:commons-codec", version = "1.16.0" }
commonsIo = { module = "commons-io:commons-io", version = "2.15.0" }
commonsLang = { module = "org.apache.commons:commons-lang3", version.ref = "commonsLang" }
ektorp = { module = "org.ektorp:org.ektorp", version.ref = "ektorp" }
ektorpSpring = { module = "org.ektorp:org.ektorp.spring", version.ref = "ektorp" }
groovyCore = { module = "org.apache.groovy:groovy", version.ref = "groovy" }
groovyJson = { module = "org.apache.groovy:groovy-json", version.ref = "groovy" }
janino = { module = "org.codehaus.janino:janino", version.ref = "janino" }
jsonPath = { module = "com.jayway.jsonpath:json-path", version.ref = "jsonpath" }
jsonPathAssert = { module = "com.jayway.jsonpath:json-path-assert", version.ref = "jsonpath" }
junitJupiterApi = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junitJupiter" }
junitJupiterEngine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junitJupiter" }
junitJupiterParams = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junitJupiter" }
log4jOverSlf4j = { module = "org.slf4j:log4j-over-slf4j", version.ref = "slf4j" }
logbackAccess = { module = "ch.qos.logback:logback-access", version.ref = "logback" }
logbackClassic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logstashLogbackEncoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstashLogbackEncoder" }
mockitoCore = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockitoJuniJupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
objenesis = { module = "org.objenesis:objenesis", version.ref = "objenesis" }
slf4jApi = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
spockCore = { module = "org.spockframework:spock-core", version.ref = "spock" }
spockSpring = { module = "org.spockframework:spock-spring", version.ref = "spock" }
springBeans = { module = "org.springframework:spring-beans", version.ref = "spring" }
springBootActuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "springBoot" }
springBootTest = { module = "org.springframework.boot:spring-boot-test", version.ref = "springBoot" }
springBootValidation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "springBoot" }
springBootWeb = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "springBoot" }
springContext = { module = "org.springframework:spring-context", version.ref = "spring" }
springContextSupport = { module = "org.springframework:spring-context-support", version.ref = "spring" }
springRetry = { module = "org.springframework.retry:spring-retry", version.ref = "springRetry" }
springSecurityConfig = { module = "org.springframework.security:spring-security-config", version.ref = "springSecurity" }
springSecurityCore = { module = "org.springframework.security:spring-security-core", version.ref = "springSecurity" }
springSecurityTest = { module = "org.springframework.security:spring-security-test", version.ref = "springSecurity" }
springSecurityWeb = { module = "org.springframework.security:spring-security-web", version.ref = "springSecurity" }
springTest = { module = "org.springframework:spring-test", version.ref = "spring" }
springWeb = { module = "org.springframework:spring-web", version.ref = "spring" }
springWebmvc = { module = "org.springframework:spring-webmvc", version.ref = "spring" }
togglzCore = { module = "org.togglz:togglz-core", version.ref = "togglz" }
togglzJunit = { module = "org.togglz:togglz-junit", version.ref = "togglz" }
togglzSpringBootAutoconfigure = { module = "org.togglz:togglz-spring-boot-autoconfigure", version.ref = "togglz" }
tomcatEmbedCore = { module = "org.apache.tomcat.embed:tomcat-embed-core", version.ref = "tomcat" }

# for dependency enforcement
annotations = { module = "org.jetbrains:annotations", version = "24.0.1" }
aspectJweaver = { module = "org.aspectj:aspectjweaver", version = "1.9.20.1" }
checkerEqual = { module = "org.checkerframework:checker-qual", version = "3.40.0" }
errorProneAnnotations = { module = "com.google.errorprone:error_prone_annotations", version = "2.23.0" }
gson = { module = "com.google.code.gson:gson", version = "2.10.1" }
guava = { module = "com.google.guava:guava", version = "32.1.3-jre" }
joda = { module = "joda-time:joda-time", version.ref = "jodaTime" }
kotestFrameworkApi = { module = "io.kotest:kotest-framework-api", version.ref = "kotest" }
kotlinxCoroutinesBom = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-bom", version.ref = "kotlinx" }
kotlinxCoroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx" }
kotlinxCoroutinesJdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinx" }
kotlinxCoroutinesSlf4j = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j", version.ref = "kotlinx" }
micrometer = { module = "io.micrometer:micrometer-core", version = "1.11.5" }
netty = { module = "io.netty:netty-all", version = "4.1.100.Final" }
opentest4j = { module = "org.opentest4j:opentest4j", version = "1.3.0" }
pactDriver = { module = "io.pact.plugin.driver:core", version = "0.4.1" }
protobufJava = { module = "com.google.protobuf:protobuf-java", version = "3.25.0" }
tikaCore = { module = "org.apache.tika:tika-core", version = "2.9.1" }

[bundles]
groovy = ["groovyCore", "groovyJson"]
junitJupiter = ["junitJupiterApi", "junitJupiterEngine", "junitJupiterParams"]
logging = ["log4jOverSlf4j", "logbackClassic", "janino", "logbackAccess", "logstashLogbackEncoder"]
mockito = ["mockitoCore", "mockitoJuniJupiter"]
spock = ["spockCore", "spockSpring"]
spring = ["springBeans", "springContext", "springContextSupport", "springWeb", "springWebmvc", "springRetry"]
springBoot = ["springBootWeb", "springBootActuator"]
springSecurity = ["springSecurityCore", "springSecurityConfig", "springSecurityWeb"]
springTest = ["springTest", "springBootTest", "springSecurityTest"]
togglz = ["togglzCore", "togglzSpringBootAutoconfigure", "togglzJunit"]

[plugins]
springBoot = { id = "org.springframework.boot", version.ref = "springBoot" }
